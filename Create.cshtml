@model BookStore_sag.Models.Book1

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Book1</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $(document).ready(function () {
        $('#bookForm').submit(function (event) {
            var title = $('#title').val();
            var author = $('#author').val();
            var isbn = $('#isbn').val();
            var price = $('#price').val();
            var isValid = true;

            // Clear previous error messages
            $('.error').remove();

            // Validate title
            if (title.trim() == '') {
                $('#title').after('<span class="error">Title is required</span>');
                isValid = false;
            } else if (title.length > 100) {
                $('#title').after('<span class="error">Title cannot exceed 100 characters</span>');
                isValid = false;
            }

            // Validate author
            if (author.trim() == '') {
                $('#author').after('<span class="error">Author is required</span>');
                isValid = false;
            } else if (author.length > 50) {
                $('#author').after('<span class="error">Author cannot exceed 50 characters</span>');
                isValid = false;
            }

            // Validate ISBN
            var isbnRegex = /^(?=(?:\D*\d){10}(?:(?:\D*\d){3})?$)[\d-]+$/;
            if (!isbnRegex.test(isbn)) {
                $('#isbn').after('<span class="error">Invalid ISBN format</span>');
                isValid = false;
            }

            // Validate price
            if (isNaN(price) || parseFloat(price) <= 0) {
                $('#price').after('<span class="error">Price must be a positive decimal value</span>');
                isValid = false;
            }

            if (!isValid) {
                event.preventDefault(); // Prevent form submission if validation fails
            }
        });
    });
</script>